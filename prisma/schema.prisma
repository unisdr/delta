// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url			 = env("DATABASE_URL")
}

model Session {
	id				String	 @id @default(uuid()) // Unique session ID stored in the cookie
	userId	Int
	user			User		 @relation(fields: [userId], references: [id])
	lastActiveAt DateTime @default("1970-01-01T00:00:00.000Z")
	totpAuthed Boolean @default(false)
}

model User {
	id				Int			 @id @default(autoincrement())
	role String @default("")
	firstName String
	lastName	String
	email			String	 @unique
	password	String
	sessions		 Session[] 
	posts			Post[]
	emailVerified Boolean @default(false)
	emailVerificationCode String @default("")
	emailVerificationSentAt DateTime @default("1970-01-01T00:00:00.000Z")
	emailVerificationExpiresAt DateTime @default("1970-01-01T00:00:00.000Z")

	resetPasswordToken String @default("")
	resetPasswordExpiresAt DateTime @default("1970-01-01T00:00:00.000Z")

	totpEnabled Boolean @default(false)
	totpSecret String @default("")
	totpSecretUrl String @default("")
}

model Post {
	id				Int			@id @default(autoincrement())
	title			String
	content		String?
	published Boolean @default(false)
	author		User		@relation(fields: [authorId], references: [id])
	authorId	Int
}

model Item {
	id				Int			@id @default(autoincrement())
	field1		 String
	field2	 String?
//	author		User		@relation(fields: [authorId], references: [id])
//	authorId	Int
}
